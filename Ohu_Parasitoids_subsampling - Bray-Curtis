
# Load  libraries
library(dplyr)
library(vegan)
library(tidyr)
library(tibble)

######


# Load data
MASTER <- read.csv("~/ownCloud/000_/000_R_stat/Cascading_diversity/DATA/MASTER.csv", sep=";") %>% as_tibble() #

# Load parasitoid data - only for Ohu1 and Ohu2; Par_remove == "0" - only those parasitoids which are identified to sp. level
parasitoid_data<-  MASTER  %>%
  filter(`guild` == "PAR", Par_remove == "0", locality %in% c("Ohu1", "Ohu2")) %>% 
  select(locality, PAR_sp)#


# Determine the size of the smaller locality
small_locality_size <- parasitoid_data %>% 
  group_by(locality) %>% 
  summarize(count = n()) %>% 
  summarize(min(count)) %>% 
  pull()

# Identify the bigger locality
locality_sizes <- parasitoid_data %>% 
  group_by(locality) %>% 
  summarize(count = n())

bigger_locality <- locality_sizes %>% 
  filter(count == max(count)) %>% 
  pull(locality)

# Randomly subsample from the bigger locality
set.seed(123) # Set seed for reproducibility
subsampled_data <- parasitoid_data %>%
  filter(locality == bigger_locality) %>%
  sample_n(small_locality_size)

# Combine subsampled data with the smaller locality data
small_locality <- locality_sizes %>% 
  filter(count == min(count)) %>% 
  pull(locality)

combined_data <- bind_rows(subsampled_data, parasitoid_data %>% filter(locality == small_locality))

# Verify the size of combined data
combined_data %>% group_by(locality) %>% summarize(count = n())

# Create a table with species counts for each locality
species_counts <- combined_data %>%
  group_by(locality, PAR_sp) %>%
  tally() %>%
  spread(key = locality, value = n, fill = 0) %>%
  as.data.frame()

# Replace NA with 0 for species that do not appear in a locality
species_counts[is.na(species_counts)] <- 0

# View the species counts table
print(species_counts)

# Prepare data for Bray-Curtis dissimilarity
species_matrix <- t(species_counts)
names(species_matrix) <- as.matrix(species_matrix[1, ])
species_matrix <- species_matrix[-1, ]
species_matrix <-as.data.frame(apply(species_matrix,2,  as.numeric))


# Calculate Bray-Curtis dissimilarity
bray_curtis <- vegdist(species_matrix, method = "bray")

# View the Bray-Curtis dissimilarity matrix
print(as.matrix(bray_curtis))


# Function for repetition
resample_and_calculate <- function(data, small_locality_size, bigger_locality, small_locality) {
  set.seed(sample(1:10000, 1)) # Set a random seed for reproducibility
  subsampled_data <- data %>%
    filter(locality == bigger_locality) %>%
    sample_n(small_locality_size)
  
  combined_data <- bind_rows(subsampled_data, data %>% filter(locality == small_locality))
  
  species_counts <- combined_data %>%
    group_by(locality, PAR_sp) %>%
    tally() %>%
    spread(key = locality, value = n, fill = 0) %>%
    as.data.frame()
  
  species_matrix <- species_counts %>%
    column_to_rownames(var = "PAR_sp") %>%
    t() %>%
    as.matrix()
  
  bray_curtis <- vegdist(species_matrix, method = "bray")
  return(as.matrix(bray_curtis))
}


bray_curtis_results <- lapply(1:999, function(x) {
  resample_and_calculate(parasitoid_data, small_locality_size, bigger_locality, small_locality)
})

# View the results
print(bray_curtis_results)

bray_curtis_values <- sapply(bray_curtis_results, function(mat) mat[1, 2])
mean_bray_curtis <- mean(bray_curtis_values)

# Print the mean Bray-Curtis dissimilarity
print(mean_bray_curtis)
